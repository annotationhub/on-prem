version: "3.8"
services:
  db:
    env_file:
      - ./conf/db/db.env
    image: crossfold/hub-db:1.4.9
    ports:
      - "5432:5432"
    volumes:
      - "./pgdata:/var/lib/postgresql/data"
    restart: always
    healthcheck:
      test: "exit 0"

  redis:
    image: redis:6.2.5-alpine
    restart: always
    ports:
      - "6379:6379"

  server:
    env_file:
      - ./conf/web-server/web-server.env
    image: crossfold/web-server:v1.19.0.onprem
    restart: always
    environment:
      - DATABASE_HUBDB_HOST=db
    volumes:
      - "${DATA_DIRECTORY}:/var/data"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
    ports: 
      - "8080:8080"

  workers:
    env_file:
      - ./conf/workers/workers.env
    image: crossfold/web-server:v1.19.1.onprem
    restart: always
    environment:
      - DATABASE_HUBDB_HOST=db
    volumes:
      - "${DATA_DIRECTORY}:/var/data"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081", "&&", "curl", "-f", "http://localhost:8082"]
    ports:
      - "8082:8082"
      - "8081:8081"
    command: "yarn start:worker:combo:prod"

  inference-worker:
    env_file:
      - ./conf/inference-worker/inference-worker.env
    image: crossfold/web-server:v1.19.1.onprem
    restart: always
    environment:
      - DATABASE_HUBDB_HOST=db
    volumes:
      - "${DATA_DIRECTORY}:/var/data"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083"]
    ports: 
      - "8083:8083"
    command: "yarn start:worker:inferences:prod"

  client:
    image: crossfold/web-client:v1.19.2.onprem
    restart: always
    volumes:
      - "./conf/web-client/web-client.js:/app/public/env.js"
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
    ports:
      - "3000:3000"
    command: "serve -s ./public -l 3000"

  proxy:
    image: nginx:1.21.6
    restart: always
    volumes:
      - "./conf/nginx/:/etc/nginx/"
      - "${SSL_CERT_PATH}:/etc/certs/fullchain.pem"
      - "${SSL_KEY_PATH}:/etc/certs/privkey.pem"
    depends_on:
      server:
        condition: service_healthy
      client:
        condition: service_healthy
    ports:
      - "443:443"
